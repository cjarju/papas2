## # ERRORS
#
## * Custom error message/pages
#
## customize what Apache returns to the client in case of an error
## ErrorDocument 404 /404.html
#
## * Error prevention  
#
## disable the pattern matching based on filename so that apache will not return 
## a 404 error as the result of a rewrite when  the directory with the same name 
## does not exist (MultiViews)
##
## Default value for Options is All. Set Options to None and enable specific options as needed 
## (!) Mixing Options with a + or - with those without is not valid syntax and is likely to cause unexpected results.
Options None
#
## # MEDIA TYPES AND CHARACTER ENCODINGS 
#
## * Media types   
#
## Serve resources with the proper media types (f.k.a. MIME types).
#<IfModule mod_mime.c>
#
#  # Data interchange
#
#    AddType application/atom+xml                        atom
#    AddType application/json                            json map topojson
#    AddType application/ld+json                         jsonld
#    AddType application/rss+xml                         rss
#    AddType application/vnd.geo+json                    geojson
#    AddType application/xml                             rdf xml
#
#
#  # JavaScript
#
#    # Normalize to standard type.
#    # https://tools.ietf.org/html/rfc4329#section-7.2
#
#    AddType application/javascript                      js
#    AddType application/x-javascript                    js
#
#  # Manifest files
#
#    AddType application/manifest+json                   webmanifest
#    AddType application/x-web-app-manifest+json         webapp
#    AddType text/cache-manifest                         appcache
#
#
#  # Media files
#
#    AddType audio/mp4                                   f4a f4b m4a
#    AddType audio/ogg                                   oga ogg opus
#    AddType image/bmp                                   bmp
#    AddType image/svg+xml                               svg svgz
#    AddType image/webp                                  webp
#    AddType video/mp4                                   f4v f4p m4v mp4
#    AddType video/ogg                                   ogv
#    AddType video/webm                                  webm
#    AddType video/x-flv                                 flv
#
#    # Serving `.ico` image files with a different media type
#    # prevents Internet Explorer from displaying then as images:
#    AddType image/x-icon                                cur ico
#
#
#  # Web fonts
#
#    AddType application/font-woff                       woff
#    AddType application/font-woff2                      woff2
#    AddType application/vnd.ms-fontobject               eot
#
#    # Browsers usually ignore the font media types and simply sniff
#    # the bytes to figure out the font type.
#    # https://mimesniff.spec.whatwg.org/#matching-a-font-type-pattern
#    #
#    # However, Blink and WebKit based browsers will show a warning
#    # in the console if the following font types are served with any
#    # other media types.
#
#    AddType application/x-font-ttf                      ttc ttf
#    AddType font/opentype                               otf
#
#
#  # Other
#
#    AddType application/octet-stream                    safariextz
#    AddType application/x-bb-appworld                   bbaw
#    AddType application/x-chrome-extension              crx
#    AddType application/x-opera-extension               oex
#    AddType application/x-xpinstall                     xpi
#    AddType text/vcard                                  vcard vcf
#    AddType text/vnd.rim.location.xloc                  xloc
#    AddType text/vtt                                    vtt
#    AddType text/x-component                            htc
#
#</IfModule>
#
## * Character encodings  
#
## Serve all resources labeled as `text/html` or `text/plain`
## with the media type `charset` parameter set to `UTF-8`.
#AddDefaultCharset utf-8
#
## Serve the following file types with the media type `charset`
## parameter set to `UTF-8`.
#<IfModule mod_mime.c>
#    AddCharset utf-8 .atom \
#                     .bbaw \
#                     .css \
#                     .geojson \
#                     .js \
#                     .json \
#                     .jsonld \
#                     .manifest \
#                     .rdf \
#                     .rss \
#                     .topojson \
#                     .vtt \
#                     .webapp \
#                     .webmanifest \
#                     .xloc \
#                     .xml
#</IfModule>
#
## # REWRITES  
#
## * Rewrite engine: condition and rules  
#
<IfModule mod_rewrite.c>

    # Enable the 'FollowSymlinks' option. It's needed for per-directory rewrite rules
    Options +FollowSymlinks
	
    # Turn on the rewrite engine
    RewriteEngine On
	
	RewriteCond %{HTTPS} =on
    RewriteRule ^ - [env=proto:https]
    RewriteCond %{HTTPS} !=on
    RewriteRule ^ - [env=proto:http]
	
    # Forcing 'https://'
    RewriteCond %{HTTPS} !=on
    RewriteRule ^(.*) https://%{HTTP_HOST}/papas2/$1 [R=301,L]

    # Suppressing 'www.' at the beginning of FQDNs: rewrite www.example.com → example.com
    RewriteCond %{HTTP_HOST} ^www\.(.+)$ [NC]
    RewriteRule ^ %{ENV:PROTO}://%1%{REQUEST_URI} [R=301,L]

    # To externally redirect /dir/foo.php to /dir/foo
    #RewriteCond %{REQUEST_METHOD} !POST
    RewriteCond %{THE_REQUEST} ^[A-Z]{3,}\s([^.]+)\.php [NC]
    RewriteRule ^ %1 [R,L]
	
	# To internally forward /dir/foo to /dir/foo.php, /dir/foo/ to /dir/foo/
	RewriteCond %{REQUEST_FILENAME} !-d
	RewriteCond %{REQUEST_FILENAME}\.php -f
	RewriteRule ^(.*)$ $1.php

</IfModule>
#
## # SECURITY  
#
## * File access   
#
## Block access to directories without a default document.
## Effectively disables directory browsing (listing). 
## Options None set above also disables Indexes 
## Options -Indexes
#
## Block access to all hidden files and directories with the exception of
## the visible content from within the '/.well-known/' hidden directory.
## The `/.well-known/` directory represents the standard (RFC 5785) path
## prefix for "well-known locations" (e.g.: `/.well-known/manifest.json`,
## `/.well-known/keybase.txt`), and therefore, access to its visible
## content should not be blocked.
#<IfModule mod_rewrite.c>
#    RewriteEngine On
#    RewriteCond %{REQUEST_URI} "!(^|/)\.well-known/([^./]+./?)+$" [NC]
#    RewriteCond %{SCRIPT_FILENAME} -d [OR]
#    RewriteCond %{SCRIPT_FILENAME} -f
#    RewriteRule "(^|/)\." - [F]
#</IfModule>
#
## Block access to files that can expose sensitive information.
## By default, block access to backup and source files that may be
## left by some text editors and can pose a security risk when anyone
## has access to them.
#<FilesMatch "(^#.*#|\.(bak|conf|dist|fla|in[ci]|log|psd|sh|sql|sw[op])|~)$">
#
#    # Apache < 2.3
#    <IfModule !mod_authz_core.c>
#        Order allow,deny
#        Deny from all
#        Satisfy All
#    </IfModule>
#
#    # Apache ≥ 2.3
#    <IfModule mod_authz_core.c>
#        Require all denied
#    </IfModule>
#
#</FilesMatch>
#
#<FilesMatch "^(_.*|contact_me)\.php$">
#
#    # Apache < 2.3
#    <IfModule !mod_authz_core.c>
#        Order allow,deny
#        Deny from all
#        Satisfy All
#    </IfModule>
#
#    # Apache ≥ 2.3
#    <IfModule mod_authz_core.c>
#        Require all denied
#    </IfModule>
#
#</FilesMatch>
#
## * Header security related settings 
#
#<IfModule mod_headers.c>
#
#	# HTTP Strict Transport Security (HSTS)  
#    # Force client-side SSL redirection.
#    # Remove the `includeSubDomains` optional directive if the website's
#    # subdomains are not using HTTPS.
#    #Header always set Strict-Transport-Security "max-age=16070400; includeSubDomains"
#
#    # Reducing MIME type security risks  
#    # Prevent some browsers from MIME-sniffing the response.
#    Header set X-Content-Type-Options "nosniff"
#
#	# Remove the `X-Powered-By` response header that contains the server-side technology information   
#	Header unset X-Powered-By
#
#	# Prevent Apache from adding a trailing footer line containing
#	# information about the server to the server-generated documents
#	# (e.g.: error messages, directory listings, etc.)
#	ServerSignature Off
#
#	# Set cookie with HttpOnly and Secure flag to mitigate most of the common Cross Site 
#	# Scripting attacks
#	Header append Set-Cookie HttpOnly;Secure
#
#	# The cross-site scripting (XSS) filter in built into most web browsers and enabled
#    # by default. But in some cases it may be disabled by the user.
#    # Enable the XSS filter even if it was disabled by the user 
#    # Note: do not rely on XSS filter only to prevent XSS attacks. Ensure that you are 
#    # taking all possible measures to prevent XSS attacks, the most obvious being: 
#    # validating and sanitizing your website's inputs.
#	Header set X-XSS-Protection "1; mode=block"
#
#	# Content Security Policy (CSP)
#	# Whitelists trusted sources of content for your website.
#	# The example header below allows ONLY scripts that are loaded from
#	# the current website's origin (no inline scripts, no CDN, etc).
#	# That almost certainly won't work as-is for your website!
#    # Header set Content-Security-Policy "script-src 'self'; object-src 'self'"
#
#	# Clickjacking  
#	# Protect website against clickjacking.
#	Header append X-Frame-Options SAMEORIGIN
#
#	# `mod_headers` cannot match based on the content-type, however,
#    # the following response headers should be send only for
#    # HTML documents and not for the other resources.
#
#	<FilesMatch "\.(appcache|atom|bbaw|bmp|crx|css|cur|eot|f4[abpv]|flv|geojson|gif|htc|ico|jpe?g|js|json(ld)?|m4[av]|manifest|map|mp4|oex|og[agv]|opus|otf|pdf|png|rdf|rss|safariextz|svgz?|swf|topojson|tt[cf]|txt|vcard|vcf|vtt|webapp|web[mp]|webmanifest|woff2?|xloc|xml|xpi)$">
#        Header unset X-XSS-Protection
#        Header unset X-Frame-Options
#        # Header unset Content-Security-Policy
#	</FilesMatch>
#
#</IfModule>
#
## * SSL 
#
#<IfModule mod_ssl.c>
#    
#    # disable weak ciphers 
# 	SSLCipherSuite HIGH:!MEDIUM:!aNULL:!MD5:!RC4
#
# 	# disable SSL <= v2 (many security flaws)
#    # SSLProtocol –ALL +SSLv3 +TLSv1
#
#</IfModule>
#
## # WEB PERFORMANCE  
#
## * Compression 
#
#<IfModule mod_deflate.c>
#
#    # Force compression for mangled `Accept-Encoding` request headers
#    <IfModule mod_setenvif.c>
#        <IfModule mod_headers.c>
#            SetEnvIfNoCase ^(Accept-EncodXng|X-cept-Encoding|X{15}|~{15}|-{15})$ ^((gzip|deflate)\s*,?\s*)+|[X~-]{4,13}$ HAVE_Accept-Encoding
#            RequestHeader append Accept-Encoding "gzip,deflate" env=HAVE_Accept-Encoding
#        </IfModule>
#    </IfModule>
#
#    # Compress all output labeled with one of the following media types.
#    #
#    # (!) For Apache versions below version 2.3.7 you don't need to
#    # enable `mod_filter` and can remove the `<IfModule mod_filter.c>`
#    # and `</IfModule>` lines as `AddOutputFilterByType` is still in
#    # the core directives.
#    
#    <IfModule mod_filter.c> 
#		AddOutputFilterByType DEFLATE "application/atom+xml" \
#									  "application/javascript" \
#									  "application/json" \
#									  "application/ld+json" \
#									  "application/manifest+json" \
#									  "application/rdf+xml" \
#									  "application/rss+xml" \
#									  "application/schema+json" \
#									  "application/vnd.geo+json" \
#									  "application/vnd.ms-fontobject" \
#									  "application/x-font-ttf" \
#									  "application/x-javascript" \
#									  "application/x-web-app-manifest+json" \
#									  "application/xhtml+xml" \
#									  "application/xml" \
#									  "font/eot" \
#									  "font/opentype" \
#									  "image/bmp" \
#									  "image/svg+xml" \
#									  "image/vnd.microsoft.icon" \
#									  "image/x-icon" \
#									  "text/cache-manifest" \
#									  "text/css" \
#									  "text/html" \
#									  "text/javascript" \
#									  "text/plain" \
#									  "text/vcard" \
#									  "text/vnd.rim.location.xloc" \
#									  "text/vtt" \
#									  "text/x-component" \
#									  "text/x-cross-domain-policy" \
#									  "text/xml"
#
#    
#	</IfModule>
#    # Map the following filename extensions to the specified
#    # encoding type in order to make Apache serve the file types
#    # with the appropriate `Content-Encoding` response header
#    # (do note that this will NOT make Apache compress them!).
#    #
#    # If these files types would be served without an appropriate
#    # `Content-Enable` response header, client applications (e.g.:
#    # browsers) wouldn't know that they first need to uncompress
#    # the response, and thus, wouldn't be able to understand the
#    # content.
#    <IfModule mod_mime.c>
#        AddEncoding gzip              svgz
#    </IfModule>
#
#</IfModule>
#
## * Caching: Expires headers 
#
## Serve resources with far-future expires headers.
##
## (!) If you don't control versioning with filename-based
## cache busting, you should consider lowering the cache times
## to something like one week.
#
#<IfModule mod_expires.c>
#
#    ExpiresActive on
#    ExpiresDefault                                      "access plus 1 month"
#
#  # CSS
#
#    ExpiresByType text/css                              "access plus 1 year"
#
#
#  # Data interchange
#
#    ExpiresByType application/atom+xml                  "access plus 1 hour"
#    ExpiresByType application/rdf+xml                   "access plus 1 hour"
#    ExpiresByType application/rss+xml                   "access plus 1 hour"
#
#    ExpiresByType application/json                      "access plus 0 seconds"
#    ExpiresByType application/ld+json                   "access plus 0 seconds"
#    ExpiresByType application/schema+json               "access plus 0 seconds"
#    ExpiresByType application/vnd.geo+json              "access plus 0 seconds"
#    ExpiresByType application/xml                       "access plus 0 seconds"
#    ExpiresByType text/xml                              "access plus 0 seconds"
#
#
#  # Favicon (cannot be renamed!) and cursor images
#
#    ExpiresByType image/vnd.microsoft.icon              "access plus 1 week"
#    ExpiresByType image/x-icon                          "access plus 1 week"
#
#  # HTML
#
#    ExpiresByType text/html                             "access plus 0 seconds"
#
#
#  # JavaScript
#
#    ExpiresByType application/javascript                "access plus 1 year"
#    ExpiresByType application/x-javascript              "access plus 1 year"
#    ExpiresByType text/javascript                       "access plus 1 year"
#
#
#  # Manifest files
#
#    ExpiresByType application/manifest+json             "access plus 1 week"
#    ExpiresByType application/x-web-app-manifest+json   "access plus 0 seconds"
#    ExpiresByType text/cache-manifest                   "access plus 0 seconds"
#
#
#  # Media files
#
#    ExpiresByType audio/ogg                             "access plus 1 month"
#    ExpiresByType image/bmp                             "access plus 1 month"
#    ExpiresByType image/gif                             "access plus 1 month"
#    ExpiresByType image/jpeg                            "access plus 1 month"
#    ExpiresByType image/png                             "access plus 1 month"
#    ExpiresByType image/svg+xml                         "access plus 1 month"
#    ExpiresByType image/webp                            "access plus 1 month"
#    ExpiresByType video/mp4                             "access plus 1 month"
#    ExpiresByType video/ogg                             "access plus 1 month"
#    ExpiresByType video/webm                            "access plus 1 month"
#
#
#  # Web fonts
#
#    # Embedded OpenType (EOT)
#    ExpiresByType application/vnd.ms-fontobject         "access plus 1 month"
#    ExpiresByType font/eot                              "access plus 1 month"
#
#    # OpenType
#    ExpiresByType font/opentype                         "access plus 1 month"
#
#    # TrueType
#    ExpiresByType application/x-font-ttf                "access plus 1 month"
#
#    # Web Open Font Format (WOFF) 1.0
#    ExpiresByType application/font-woff                 "access plus 1 month"
#    ExpiresByType application/x-font-woff               "access plus 1 month"
#    ExpiresByType font/woff                             "access plus 1 month"
#
#    # Web Open Font Format (WOFF) 2.0
#    ExpiresByType application/font-woff2                "access plus 1 month"
#
#
#  # Other
#
#    ExpiresByType text/x-cross-domain-policy            "access plus 1 week"
#
#</IfModule>
#
## * Filename-based cache busting 
#
## If you're not using a build process to manage your filename version
## revving, you might want to consider enabling the following directives
## to route all requests such as `/style.12345.css` to `/style.css`.
##
## This is important and even a better solution than using something like `*.css?v231` 
#
## <IfModule mod_rewrite.c>
##     RewriteEngine On
##     RewriteCond %{REQUEST_FILENAME} !-f
##     RewriteRule ^(.+)\.(\d+)\.(bmp|css|cur|gif|ico|jpe?g|js|png|svgz?|webp|webmanifest)$ $1.$3 [L]
## </IfModule>
#
## * ETags 
#
## Remove `ETags` as resources are sent with far-future expires headers.
## `FileETag None` doesn't work in all cases.
#
#<IfModule mod_headers.c>
#    Header unset ETag
#</IfModule>
#
#FileETag None
#
## * Content transformation
#
## Prevent intermediate caches or proxies (e.g.: such as the ones
## used by mobile network providers) from modifying the website's
## content.
##
## (!) If you are using `mod_pagespeed`, please note that setting
## the `Cache-Control: no-transform` response header will prevent
## `PageSpeed` from rewriting `HTML` files, and, if the
## `ModPagespeedDisableRewriteOnNoTransform` directive isn't set
## to `off`, also from rewriting other resources.
#
## <IfModule mod_headers.c>
##     Header merge Cache-Control "no-transform"
## </IfModule>